https://bit.ly/docker-sk

도커의 등장
솔로몬 하이크, 파이콘 2013 라이트닝 토크 (파이썬으로 먼저 만들어 짐, 이 후 go언어)

docker run -it ubuntu:lastest echo "hello world"
docker run -it ubuntu:lastest bash

컨테이너는 가상머신인가?
각각의 VM = 서로 다른 환경
각각의 컨테이너  = 서로다른 환경

VM 은 하드웨어 가상화 : 소프트웨어로 구현된 하드웨어
컨테이너는 하드웨어 가상화가 아님 : 격리된 환경에서 프로세스를 실행, os 에서 지원하는 기능을 사용
하드웨버 가상화 없이 격리된 환경에서 실행되는 프로세스
리눅스의 커널에서 제공하는 프로세스가 실행되는 격리된 환경이다.

컨테이너
cgroups
namespaces
netlink
selinux
netfilter
capabilities


이미지
특정 프로세스를 실행하기 위한 환경
계층화된 파일 시스템
이미지는 파일들의 집합
프로세스가 실행되는 환경도 결국 파일들의 집합

아키텍처
리눅스 머신
컨테이너를 네이티브하게 지원
macos의 가상화 방식 (경량 가상머신)
컨테이너 = xhyve(엑스하이브)의 프로세스
macos -> xhyve(server, container) 

컨테이너 가상화가 필요한 이유
이미지 = 작동되는 상태
서로다른 환경(맥, 윈도우, 리눅스)에서 이미지로 만들면 공유가능
뽕맞은 chroot
초 강력한 포터블 앱

        도커안의 포트 / 도커 바깥 포트
docker run -p 3306:3306 --name mysql mysql:lastest
